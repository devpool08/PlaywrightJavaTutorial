name: Playwright Tests with Allure Reports
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Maven dependencies for faster builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build & Install
        run: mvn -B install -DskipTests --no-transfer-progress

      # Windows-specific browser installation (fixes Windows issues)
      - name: Install browsers (Windows)
        if: runner.os == 'Windows'
        run: |
          mvn exec:java -e -D"exec.mainClass=com.microsoft.playwright.CLI" -D"exec.args=install --with-deps"
        shell: cmd

      # Unix-based systems (Ubuntu/macOS)
      - name: Install browsers (Unix)
        if: runner.os != 'Windows'
        run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install --with-deps"

      # Create allure-results directory
      - name: Create Allure results directory
        run: mkdir -p target/allure-results
        shell: bash

      - name: Run intentionally failing screenshot test
        run: mvn test -Dtest=org.example.day4.TestScreenshots#takeScreenshot -Dmaven.test.failure.ignore=true
        continue-on-error: true

      - name: Run remaining tests (excluding TestScreenshots)
        run: mvn test -Dsurefire.excludes=**/TestScreenshots.java

      # Upload allure-results as artifacts
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.os }}
          path: target/allure-results/
          retention-days: 20

  # Generate and publish Allure report (runs after all tests complete)
  publish-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - uses: actions/checkout@v4

      # Download all allure-results from different OS
      - name: Download Allure Results (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ubuntu-latest
          path: allure-results-ubuntu

      - name: Download Allure Results (Windows)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-windows-latest
          path: allure-results-windows
        continue-on-error: true

      - name: Download Allure Results (macOS)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-macos-latest
          path: allure-results-macos
        continue-on-error: true

      # Combine all results
      - name: Combine Allure Results
        run: |
          mkdir -p combined-allure-results
          cp -r allure-results-ubuntu/* combined-allure-results/ 2>/dev/null || true
          cp -r allure-results-windows/* combined-allure-results/ 2>/dev/null || true
          cp -r allure-results-macos/* combined-allure-results/ 2>/dev/null || true
          ls -la combined-allure-results/

      # Get Allure history for trend data
      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # Generate Allure report
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: combined-allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20

      # Deploy to GitHub Pages
      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
          destination_dir: .
