name: Playwright Tests with Allure Reports
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build & Install
        run: mvn -B install -DskipTests --no-transfer-progress

      - name: Install browsers
        run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install --with-deps"

      - name: Create Allure results directory
        run: mkdir -p target/allure-results

      - name: Run intentionally failing screenshot test
        run: mvn test -Dtest=org.example.day4.TestScreenshots#takeScreenshot -Dmaven.test.failure.ignore=true
        continue-on-error: true

      - name: Run remaining tests (excluding TestScreenshots)
        run: mvn test -Dsurefire.excludes=**/TestScreenshots.java

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.os }}
          path: target/allure-results/
          retention-days: 20

  # Fixed report generation using manual Allure installation
  publish-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - uses: actions/checkout@v4

      # Download all allure-results
      - name: Download Ubuntu Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ubuntu-latest
          path: allure-results-ubuntu
        continue-on-error: true

      - name: Download macOS Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-macos-latest
          path: allure-results-macos
        continue-on-error: true

      # Combine all results
      - name: Combine Allure Results
        run: |
          mkdir -p combined-allure-results
          if [ -d "allure-results-ubuntu" ]; then
            cp -r allure-results-ubuntu/* combined-allure-results/ 2>/dev/null || true
          fi
          if [ -d "allure-results-macos" ]; then
            cp -r allure-results-macos/* combined-allure-results/ 2>/dev/null || true
          fi
          echo "Combined results:"
          ls -la combined-allure-results/

      # Install Allure manually
      - name: Install Allure
        run: |
          wget -q https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
          tar -xzf allure-2.25.0.tgz
          sudo mv allure-2.25.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      # Get previous report history
      - name: Get Allure history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages-backup

      - name: Copy history
        continue-on-error: true
        run: |
          if [ -d "gh-pages-backup/history" ]; then
            cp -r gh-pages-backup/history combined-allure-results/
          fi

      # Generate Allure report manually
      - name: Generate Allure Report
        run: |
          allure generate combined-allure-results -o allure-report --clean
          echo "Report generated successfully"
          ls -la allure-report/

      # Deploy to GitHub Pages using peaceiris action
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          keep_files: false
          publish_branch: gh-pages
